<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<# var EntityName = "Element"; #>
<# var ApiRoute = "element"; #>
<# var ApiDescribe = "页面元素"; #>
<# var ApiNamespace = "Yu.Service"; #>

<# var ControllerDescribe = "元素管理"; #>
<# var ControllerNamespace = "Yu.Api.Areas.WebAdmin.Controllers"; #>

using Microsoft.AspNetCore.Mvc;
using System.ComponentModel;
using System.Threading.Tasks;
using Yu.Core.Mvc;
using Yu.Data.Entities;
using Yu.Data.Entities.Right;
using Yu.Model.Common.InputModels;
using <#=ApiNamespace#>;

namespace <#=ControllerNamespace#>
{
    [Route("api")]
    [Description("<#=ControllerDescribe#>")]
    public class <#=EntityName#>Controller : AuthorizeController
    {
        private readonly I<#=EntityName#>Service _service;

        public <#=EntityName#>Controller(I<#=EntityName#>Service service)
        {
            _service = service;
        }

		/// <summary>
        /// 取得数据
        /// </summary>
        [HttpGet("<#=ApiRoute#>")]
        [Description("取得<#=ApiDescribe#>数据")]
        public IActionResult Get<#=EntityName#>s([FromQuery] PagedQuery query)
        {
            var result = _service.Get<#=EntityName#>s(query.PageIndex, query.PageSize, query.SearchText);
            return Ok(result);
        }

        /// <summary>
        /// 创建Api数据
        /// </summary>
        [HttpPost("<#=ApiRoute#>")]
        [Description("添加<#=ApiDescribe#>数据")]
        public async Task<IActionResult> Add<#=EntityName#>([FromBody]<#=EntityName#> entity)
        {
            await _service.Add<#=EntityName#>Async(entity);
            return Ok();
        }

        /// <summary>
        /// 更新api数据
        /// </summary>
        [HttpPut("<#=ApiRoute#>")]
        [Description("更新<#=ApiDescribe#>数据")]
        public async Task<IActionResult> Update<#=EntityName#>([FromBody]<#=EntityName#> entity)
        {
            await _service.Update<#=EntityName#>Async(entity);
            return Ok();
        }

        /// <summary>
        /// 删除api数据
        /// </summary>
        [HttpDelete("<#=ApiRoute#>")]
        [Description("删除<#=ApiDescribe#>数据")]
        public async Task<IActionResult> Delete<#=EntityName#>([FromQuery]IdQuery query)
        {
            await _service.Delete<#=EntityName#>Async(query.Id);
            return Ok();
        }
	}
}